% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IA.R
\name{IA}
\alias{IA}
\title{Recursive Calculation of Coefficients using the Innovations Algorithm}
\usage{
IA(X, max_lag = length(X))
}
\arguments{
\item{X}{A numerical or complex atomic vector representing the time series data.}

\item{max_lag}{An integer specifying the maximum number of lags to be checked. By default, it is set to the length of the time series.}
}
\value{
A list with three components:
\item{coeffs}{A numerical atomic vector of one-step predictors.}
\item{nu}{A numerical atomic vector of innovations or one-step prediction errors.}
\item{theta}{A numerical coefficient matrix of the Innovations Algorithm.}
}
\description{
\code{IA} can be used to compute the innovations and the innovation variances for a time series.
}
\details{
The \strong{Innovations Algorithm} is a recursive method used in time series analysis to compute the best linear predictors of a time series and their associated prediction errors, known as innovations. For a given time series \eqn{\{x_1, \dots, x_n\}}, the algorithm provides a way to decompose the series into uncorrelated components.

The algorithm works by computing the innovations and their variances step by step, using the given \code{\link{sample_ACVF}} function of the time series. It is particularly useful in the context of ARMA models and other linear time series models.

The coefficients \eqn{\theta_{n1}, \dots, \theta_{nn}} can be computed recursively from the equations

\deqn{\nu_0 = \kappa(1, 1),}

\deqn{\theta_{n, n-k} = \nu_k^{-1} \left( \kappa(n+1, k+1) - \displaystyle{\sum_{j=0}^{k-1} \theta_{k, k-j} \theta_{n, n-j} \nu_j} \right), \quad 0 \leq k < n,}

and

\deqn{\nu_n = \kappa(n+1, n+1) - \displaystyle{\sum_{j=0}^{n-1} \theta_{n, n-j}^2 \nu_j}.}

The algorithm iteratively calculates these coefficients, which are essential for the analysis of moving average processes
and can be used as inputs of the \code{\link{make_MA}} function.
}
\examples{
# Generate a sample time series and its autocovariance
X <- rnorm(100)

# Calculate the coefficients
out <- IA(X)
print(out$coeffs)
print(out$nu)
print(out$theta)

}
\references{
Brockwell, P.J., Davis, R.A. (2016) \emph{Introduction to Time Series and Forecasting}. Springer.
}
