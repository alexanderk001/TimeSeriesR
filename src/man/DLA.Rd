% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DLA.R
\name{DLA}
\alias{DLA}
\title{Recursive Calculation of Coefficients using the Durbin-Levinson Algorithm}
\usage{
DLA(X)
}
\arguments{
\item{X}{A numeric or complex atomic vector representing the time series data.
The time series should be stationary, meaning that its mean and covariance function are independent of time.}
}
\value{
The output of this function is an anonymous function. The returned function takes the value \code{m} as a parameter. The value \code{m} means that we use the last m values of the time series to predict the next value of the time series using the Durbin-Levinson algorithm. This function calculates the Durbin-Levinson algorithm, which then returns
a list with two components:
\item{phi}{A numeric atomic vector representing the calculated coefficients \eqn{\phi_{n1}, \dots, \phi_{nn}}.}
\item{nu}{A numeric atomic vector representing the mean squared error of the one-step predictors.}
}
\description{
\code{DLA} can be used to perform the Durbin-Levinson algorithm on stationary time series data.
}
\details{
The \strong{Durbin-Levinson Algorithm} is used to recursively calculate the coefficients \eqn{\phi_{n1}, \dots, \phi_{nn}}
for a given time series \eqn{\{x_1, \dots, x_n\}}. The recursion can be expressed as follows:

\deqn{\phi_{nn} = \left[ \gamma(n) - \displaystyle{\sum_{j=1}^{n-1} \phi_{n-1, j} \gamma(n-j)} \right] \nu_{n-1}^{-1},}

\deqn{
\left[ \begin{array}{c}
       \phi_{n1} \\
       \vdots \\
       \phi_{n, n-1}
       \end{array}
\right]
=
\left[ \begin{array}{c}
       \phi_{n-1,1} \\
       \vdots \\
       \phi_{n-1,n-1}
       \end{array}
\right]
-
\phi_{nn}
\left[ \begin{array}{c}
       \phi_{n-1,n-1} \\
       \vdots \\
       \phi_{n-1,1}
       \end{array}
\right]}

and

\deqn{\nu_n = \nu_{n-1} \left[1 - \phi_{nn}^2\right],}

where \eqn{\phi_{11} = \gamma(1)/\gamma(0)} and \eqn{\nu_0 = \gamma(0)}.

The algorithm iteratively calculates these coefficients, which are essential for the analysis of autoregressive processes
and can be used as inputs of the \code{\link{make_AR}} function.
}
\examples{
# Example 1: Basic Usage
X <- rnorm(100)
model <- DLA(X)
result <- model(20)
print(result)

# Example 2: Usage for an AR(4) model
t <- 100
phi <- c(1, 0, 1, 2)
data <- make_AR(t, phi)
model <- DLA(data)
result <- model(4)
print(result)

# Example 3: Usage for an MA(4) model
t <- 100
theta <- c(0, 4, 1, 0)
data <- make_MA(t, theta)
model <- DLA(data)
result <- model(4)
print(result)

}
\references{
Brockwell, P.J., Davis, R.A. (2016) \emph{Introduction to Time Series and Forecasting}. Springer.
}
